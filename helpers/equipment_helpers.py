"""
In this file all the functions to add equipment from the API response to the database are saved.
"""

from helpers import db_helpers
from helpers import instruction_helpers

def newEquipment(recipe):
    """
    Takes a recipe and puts all equipments used into the equipment table of the database
    :param recipe: object of the class recipe
    :return: adds data to the database
    """
    db = db_helpers.getDbCon()
    cursor = db.cursor()
    equipmentInsertQuery = """INSERT into equipment (equipment_id, equipment_name) 
                              VALUES (%s, %s) ON Duplicate KEY UPDATE equipment_id = equipment_id;"""
    try:
        for instr in recipe.instructions:
            for equip in instr.equipment:
                cursor.execute(equipmentInsertQuery, (equip.equipment_id, equip.equipment_name))
        db.commit()
    except Exception:
        print("Error: OOPs something went wrong while adding new equipment to the database")
    finally:
        cursor.close()
        db.close()


def addEquipmenttoRecipe(recipe):
    """
    Takes a recipe and puts all equipments used into the recipe_equipment table of the database
    :param recipe: object of the class recipe
    :return: adds data to the database
    """
    db = db_helpers.getDbCon()
    cursor = db.cursor()
    recipe_instruction_id = instruction_helpers.getRecipeInstructionID(recipe)
    recipeEquipmentInsertQuery = """INSERT into recipe_equipment (recipe_instruction_id, equipment_id) VALUES (%s, %s)"""
    try:
        for ind, instr in enumerate(recipe.instructions):
            for equip in instr.equipment:
                cursor.execute(recipeEquipmentInsertQuery, (recipe_instruction_id[ind], equip.equipment_id))
        db.commit()
    except Exception:
        print('Error: OOPs something went wrong while adding Equipment to a Recipe!')
    finally:
        cursor.close()
        db.close()


def addEquipmenttoUser(user_id, recipe):
    """
    This function is used to add new equipment to a user's account. It puts them into the "user_equipments" table.
    :param user_id: User_id generated by the database
    :param recipe: object of the class recipe
    :return: Adds data to database
    """
    db = db_helpers.getDbCon()
    cursor = db.cursor()
    userEquipmentInsertQuery = """INSERT into user_equipment (user_id, equipment_id) VALUES (%s, %s)"""
    try:
        for instr in recipe.instructions:
            for equip in instr.equipment:
                cursor.execute(userEquipmentInsertQuery, (user_id, equip.equipment_id))
        db.commit()
    except Exception:
        print('Error: OOPs something went wrong while adding Equipment to a user!')
    finally:
        cursor.close()
        db.close()


def getEquipmentByInstructionId(instruction_id):
    """
    This function is used to fetch the equipment id using the instruction_id
    :param recipe_id: int
    :return: equipment_id: int
    """
    db = db_helpers.getDbCon()
    cursor = db.cursor()
    userEquipmentInsertQuery = "SELECT equipment_id FROM recipe_equipment WHERE recipe_instruction_id =%s"
    try:
        cursor.execute(userEquipmentInsertQuery, (instruction_id,))
        equipment_id = cursor.fetchall()
        return equipment_id[0]
    except Exception:
        print('Error: OOPs something went wrong while adding Equipment to a user!')
    finally:
        cursor.close()
        db.close()

def getEquipmentByEquipmentId(equipment_id):
    """
    This function is used to fetch the complete equipment using the equipment_id
    :param equipment_id: int
    :return: tuple consisting of all the necessary equipment infos
    """
    db = db_helpers.getDbCon()
    cursor = db.cursor()
    userEquipmentInsertQuery = "SELECT * FROM equipments WHERE equipment_id =%s"
    try:
        cursor.execute(userEquipmentInsertQuery, (equipment_id,))
        equipment = cursor.fetchall()
        return equipment
    except Exception:
        print('Error: OOPs something went wrong while getting the equipment by equipment id!')
    finally:
        cursor.close()
        db.close()
